// This tests throwing and catching objects.  This is, in fact, how exceptions
// are expected to be handled in object-oriented languages.

class Exception {
  var v;
  method Exception(v) {
    print("Exception ", v, " thrown!\n");
    this.v = v;
  }
  method get() {
    return v;
  }
}

class Exception2 extends Exception {
  method Exception2(v) {
    Exception(v);
  }
}

class Main {

  method foo() {
    try {
      throw new Exception(5);
      print(17);                          // should not be printed
    } catch(e) {                          // "Exception2 e" in typed KOOL 
      throw new Exception2(e.get() + 2);  // unreachable in typed KOOl!
    }
    throw new Exception(-1);              // should not be reached
  }

  method Main() {
    try {
      foo();
    } catch(e) {
        print(e.get(),"\n");              // should print 7 (5 in typed KOOL)
    }
  }

}

// Exception 5 thrown!
// Exception 7 thrown!
// 7
