+ init sum-to-n sum-to-n-spec.k
+ list-cfgs
SUM-TO-N-SPEC.main
+ split-node #init N ==Int 1 --alias-true init-1 --alias-false init-not-1
+ split-node @init-not-1 N ==Int 2 --alias-true init-2 --alias-false init-not-1-2
+ split-node @init-not-1-2 N ==Int 10 --alias-true init-10
+ show-edge @init-not-1-2,@init-10
3dde9b..707641 (expanded, @init-not-1-2)
│ N:Int ==Int 10
b9624a..9c790c (frontier, leaf, @init-10)

+ show-node @init-10
<T>
  <k>
    int $n , $s , .Ids ; $n = N:Int ; $s = 0 ; while ( ! $n <= 0 ) { $s = $s + $n ; $n = $n + -1 ; }
  </k>
  <state>
    .Map
  </state>
</T>
#And { true #Equals N:Int >=Int 0 }
#And { true #Equals N:Int ==Int 10 }
#And { true #Equals notBool ( N:Int ==Int 1 ) }
#And { true #Equals notBool ( N:Int ==Int 2 ) }
+ build-edges @init-1,#target
+ verify-edges --edges @init-1,#target
+ build-edges @init-10,#target
+ verify-edges --edges @init-10,#target
+ build-edges @init-2,@init-10
CRITICAL - Could not verify claim: BASIC-BLOCK-ed71d73dca946691e513847d6349ab6b43b00ed47e299630ead69fbc5bbed2d3-TO-b9624a5a330a93ac89ccef4ab422be4281a0c3bc77681b2e2ac11472419c790c

Prover output:

<generatedTop>
  <T>
    <k>
      int $s , .Ids ; $n = 2 ; $s = 0 ; while ( ! $n <= 0 ) { $s = $s + $n ; $n = $n + -1 ; }
    </k>
    <state>
      $n |-> 0
    </state>
  </T>
  ...
</generatedTop>
#And #Top.
+ show-cfg
ad5d55..d0813a (init, expanded)
┣━ 38aba0..ea28c3 (expanded, @init-1)    N:Int ==Int 1
┃   │  [1m[32m(verified)[0m[0m
┃   │  (-1 steps)
┃   └  6a6e72..499ac5 (target, leaf)
┃
┗━ 8c6816..882c59 (expanded, @init-not-1)    notBool ( N:Int ==Int 1 )
    ┣━ ed71d7..bed2d3 (expanded, @init-2)    N:Int ==Int 2
    ┃   │  (-1 steps)
    ┃   ├  b9624a..9c790c (expanded, @init-10)
    ┃   │  [1m[32m(verified)[0m[0m
    ┃   │  (-1 steps)
    ┃   └  6a6e72..499ac5 (target, leaf)
    ┃
    ┗━ 3dde9b..707641 (expanded, @init-not-1-2)    notBool ( N:Int ==Int 2 )
        ┣━ b9624a..9c790c (expanded, @init-10)    N:Int ==Int 10
        ┃   ┊ (continues as previously)
        ┃
        ┗━ [1mee58a0..387d42 (frontier, leaf)[0m    notBool ( N:Int ==Int 10 )



