name: 'Build and Test Package'
description: 'Build the package for a given distribution and test it.'
inputs:
  os: 
    description: 'Release OS to build and test package for.'
    required: true
  distro:
    description: 'Distribution to build and test package for.'
    required: true
  llvm:
    description: 'LLVM version to use.'
    required: true
runs:
  using: 'composite'
  steps:
  - name: 'Check out code'
    uses: actions/checkout@v3
    with:
      path: k-${{ inputs.distro }}
      submodules: recursive
  - name: 'Set up Docker'
    uses: ./.github/actions/with-docker
    with:
      tag: k-package-build-${{ inputs.distro }}-${{ github.sha }}
      subdir: k-${{ inputs.distro }}/
      os: ${{ inputs.os }}
      distro: ${{ inputs.distro }}
      llvm: ${{ inputs.llvm }}

  - name: 'Build Package: ${{ inputs.distro }}'
    shell: bash {0}
    env:
      BASE_DISTRO: ${{ inputs.distro }}
    run: |
      set -euxo pipefail
      docker exec -t k-package-build-${BASE_DISTRO}-${GITHUB_SHA} /bin/bash -c 'mv package/debian debian'
      docker exec -t k-package-build-${BASE_DISTRO}-${GITHUB_SHA} /bin/bash -c "mv debian/compat.${BASE_DISTRO} debian/compat"
      docker exec -t k-package-build-${BASE_DISTRO}-${GITHUB_SHA} /bin/bash -c "mv debian/control.${BASE_DISTRO} debian/control"
      docker exec -t k-package-build-${BASE_DISTRO}-${GITHUB_SHA} /bin/bash -c "mv debian/rules.${BASE_DISTRO} debian/rules"
      docker exec -t k-package-build-${BASE_DISTRO}-${GITHUB_SHA} /bin/bash -c 'dpkg-buildpackage'
  - name: 'Tear down Docker'
    shell: bash {0}
    env:
      BASE_DISTRO: ${{ inputs.distro }}
    if: always()
    run: |
      docker stop --time=0 k-package-build-${BASE_DISTRO}-${GITHUB_SHA}
      docker container rm --force k-package-build-${BASE_DISTRO}-${GITHUB_SHA} || true
  - name: 'Set up Docker Test Image: ${{ inputs.distro }}'
    shell: bash {0}
    env:
      BASE_OS: ${{ inputs.os }}
      BASE_DISTRO: ${{ inputs.distro }}
    run: |
      set -euxo pipefail
      workspace=$(pwd)
      cd k-${BASE_DISTRO}
      docker run                                           \
        --name k-package-test-${BASE_DISTRO}-${GITHUB_SHA} \
        --rm -it                                           \
        --detach                                           \
        --workdir /opt/workspace                           \
        -v "${workspace}:/opt/workspace"                   \
        -v "/etc/passwd:/etc/passwd:ro"                    \
        -v "/etc/group:/etc/group:ro"                      \
        ${BASE_OS}:${BASE_DISTRO}
  - name: 'Test Package: ${{ inputs.distro }}'
    shell: bash {0}
    env:
      BASE_DISTRO: ${{ inputs.distro }}
    run: |
      set -euxo pipefail
      docker exec -t k-package-test-${BASE_DISTRO}-${GITHUB_SHA} /bin/bash -c "k-${BASE_DISTRO}/src/main/scripts/test-in-container-debian"
  - name: 'Tear down Docker Test'
    shell: bash {0}
    env:
      BASE_DISTRO: ${{ inputs.distro }}
    if: always()
    run: |
      docker stop --time=0 k-package-test-${BASE_DISTRO}-${GITHUB_SHA}
      docker container rm --force k-package-test-${BASE_DISTRO}-${GITHUB_SHA} || true
  - name: 'Rename Package'
    shell: bash {0}
    env:
      BASE_DISTRO: ${{ inputs.distro }}
    run: mv kframework_$(cat package/version)_amd64.deb kframework_amd64_${BASE_DISTRO}.deb
