module FLOAT-SYNTAX
  syntax Float [hook(FLOAT.Float)]
  syntax Float ::= r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?[0-9]+)?([fFdD]|([pP][0-9]+[xX][0-9]+))?" [token, prec(1)]
  syntax Float ::= r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?" [token, prec(3)]
  syntax Float ::= r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?" [token, prec(3)]
endmodule


module FLOAT
  imports FLOAT-SYNTAX
  imports private BOOL
  imports private INT-SYNTAX

  syntax Int ::= precisionFloat(Float) [function, total, hook(FLOAT.precision)]

  syntax Int ::= exponentBitsFloat(Float) [function, total, hook(FLOAT.exponentBits)]

  syntax Int ::= exponentFloat(Float) [function, total, hook(FLOAT.exponent)]

  syntax Bool ::= signFloat(Float)      [function, total, hook(FLOAT.sign)]

  syntax Bool ::= isNaN(Float)          [function, total, smt-hook(fp.isNaN), hook(FLOAT.isNaN)]
                | isInfinite(Float)     [function, total]

  syntax Float ::= "--Float" Float             [function, total, smt-hook(fp.neg), hook(FLOAT.neg)]
                 > Float "^Float" Float        [function, left, latex({#1}^{#2}), hook(FLOAT.pow)]
                 > left:
                   Float "*Float" Float        [function, left, smt-hook((fp.mul roundNearestTiesToEven #1 #2)), latex({#1}\mathrel{\ast_{\scriptstyle\it Float}}{#2}), hook(FLOAT.mul)]
                 | Float "/Float" Float        [function, left, smt-hook((fp.div roundNearestTiesToEven #1 #2)), latex({#1}\mathrel{\div_{\scriptstyle\it Float}}{#2}), hook(FLOAT.div)]
                 | Float "%Float" Float        [function, left, smt-hook((fp.rem roundNearestTiesToEven #1 #2)), latex({#1}\mathrel{\%_{\scriptstyle\it Float}}{#2}), hook(FLOAT.rem)]
                 > left:
                   Float "+Float" Float        [function, left, smt-hook((fp.add roundNearestTiesToEven #1 #2)), latex({#1}\mathrel{+_{\scriptstyle\it Float}}{#2}), hook(FLOAT.add)]
                 | Float "-Float" Float        [function, left, smt-hook((fp.sub roundNearestTiesToEven #1 #2)), latex({#1}\mathrel{-_{\scriptstyle\it Float}}{#2}), hook(FLOAT.sub)]

  syntax Float ::= rootFloat(Float, Int)        [function, hook(FLOAT.root)]
                 | absFloat(Float)              [function, total, smt-hook(fp.abs), hook(FLOAT.abs)]
                 | roundFloat(Float, precision: Int, exponentBits: Int)  [function, hook(FLOAT.round)]
                 | floorFloat(Float)            [function, total, hook(FLOAT.floor)]
                 | ceilFloat(Float)             [function, total, hook(FLOAT.ceil)]
                 | truncFloat(Float)            [function, total, hook(FLOAT.trunc)]
                 | expFloat(Float)              [function, total, hook(FLOAT.exp)]
                 | logFloat(Float)              [function, hook(FLOAT.log)]
                 | sinFloat(Float)              [function, total, hook(FLOAT.sin)]
                 | cosFloat(Float)              [function, total, hook(FLOAT.cos)]
                 | tanFloat(Float)              [function, hook(FLOAT.tan)]
                 | asinFloat(Float)             [function, hook(FLOAT.asin)]
                 | acosFloat(Float)             [function, hook(FLOAT.acos)]
                 | atanFloat(Float)             [function, total, hook(FLOAT.atan)]
                 | atan2Float(Float, Float)     [function, hook(FLOAT.atan2)]
                 | maxFloat(Float, Float)       [function, smt-hook(fp.max), hook(FLOAT.max)]
                 | minFloat(Float, Float)       [function, smt-hook(fp.min), hook(FLOAT.min)]
                 | sqrtFloat(Float)             [function]
                 | maxValueFloat(precision: Int, exponentBits: Int)      [function, hook(FLOAT.maxValue)]
                 | minValueFloat(precision: Int, exponentBits: Int)      [function, hook(FLOAT.minValue)]

  syntax Bool ::= Float "<=Float" Float       [function, smt-hook(fp.leq), latex({#1}\mathrel{\leq_{\scriptstyle\it Float}}{#2}), hook(FLOAT.le)]
                | Float "<Float" Float        [function, smt-hook(fp.lt), latex({#1}\mathrel{<_{\scriptstyle\it Float}}{#2}), hook(FLOAT.lt)]
                | Float ">=Float" Float       [function, smt-hook(fp.geq), latex({#1}\mathrel{\geq_{\scriptstyle\it Float}}{#2}), hook(FLOAT.ge)]
                | Float ">Float" Float        [function, smt-hook(fg.gt), latex({#1}\mathrel{>_{\scriptstyle\it Float}}{#2}), hook(FLOAT.gt)]
                | Float "==Float" Float       [function, comm, smt-hook(fp.eq), latex({#1}\mathrel{==_{\scriptstyle\it Float}}{#2}), hook(FLOAT.eq), klabel(_==Float_)]
                | Float "=/=Float" Float      [function, comm, smt-hook((not (fp.eq #1 #2))), latex({#1}\mathrel{\neq_{\scriptstyle\it Float}}{#2})]

  rule F1:Float =/=Float F2:Float => notBool (F1 ==Float F2)

  syntax Float ::= Int2Float(Int, precision: Int, exponentBits: Int)    [function, latex({\\it{}Int2Float}), hook(FLOAT.int2float)]
  syntax Int ::= Float2Int(Float)    [function, total, latex({\\it{}Float2Int}), hook(FLOAT.float2int)]

  rule sqrtFloat(F:Float) => rootFloat(F, 2)

  rule isInfinite(F:Float) => F >Float maxValueFloat(precisionFloat(F), exponentBitsFloat(F)) orBool F <Float --Float maxValueFloat(precisionFloat(F), exponentBitsFloat(F))

endmodule
===
KW_MODULE
1,1
module

MODNAME
1,8
FLOAT-SYNTAX

KW_SYNTAX
2,3
syntax

ID_UPPER
2,10
Float

LBRACK
2,16
[

ATTR_KEY
2,17
hook

LPAREN
2,21
(

ATTR_CONTENT
2,22
FLOAT.Float

RPAREN
2,33
)

RBRACK
2,34
]

KW_SYNTAX
3,3
syntax

ID_UPPER
3,10
Float

DCOLONEQ
3,16
::=

REGEX
3,20
r"([\\+-]?[0-9]+(\\.[0-9]*)?|\\.[0-9]+)([eE][\\+-]?[0-9]+)?([fFdD]|([pP][0-9]+[xX][0-9]+))?"

LBRACK
3,113
[

ATTR_KEY
3,114
token

COMMA
3,119
,

ATTR_KEY
3,121
prec

LPAREN
3,125
(

ATTR_CONTENT
3,126
1

RPAREN
3,127
)

RBRACK
3,128
]

KW_SYNTAX
4,3
syntax

ID_UPPER
4,10
Float

DCOLONEQ
4,16
::=

REGEX
4,20
r"[\\+-]?Infinity([fFdD]|([pP][0-9]+[xX][0-9]+))?"

LBRACK
4,71
[

ATTR_KEY
4,72
token

COMMA
4,77
,

ATTR_KEY
4,79
prec

LPAREN
4,83
(

ATTR_CONTENT
4,84
3

RPAREN
4,85
)

RBRACK
4,86
]

KW_SYNTAX
5,3
syntax

ID_UPPER
5,10
Float

DCOLONEQ
5,16
::=

REGEX
5,20
r"NaN([fFdD]|([pP][0-9]+[xX][0-9]+))?"

LBRACK
5,59
[

ATTR_KEY
5,60
token

COMMA
5,65
,

ATTR_KEY
5,67
prec

LPAREN
5,71
(

ATTR_CONTENT
5,72
3

RPAREN
5,73
)

RBRACK
5,74
]

KW_ENDMODULE
6,1
endmodule

KW_MODULE
9,1
module

MODNAME
9,8
FLOAT

KW_IMPORTS
10,3
imports

MODNAME
10,11
FLOAT-SYNTAX

KW_IMPORTS
11,3
imports

KW_PRIVATE
11,11
private

MODNAME
11,19
BOOL

KW_IMPORTS
12,3
imports

KW_PRIVATE
12,11
private

MODNAME
12,19
INT-SYNTAX

KW_SYNTAX
14,3
syntax

ID_UPPER
14,10
Int

DCOLONEQ
14,14
::=

ID_LOWER
14,18
precisionFloat

LPAREN
14,32
(

ID_UPPER
14,33
Float

RPAREN
14,38
)

LBRACK
14,40
[

ATTR_KEY
14,41
function

COMMA
14,49
,

ATTR_KEY
14,51
total

COMMA
14,56
,

ATTR_KEY
14,58
hook

LPAREN
14,62
(

ATTR_CONTENT
14,63
FLOAT.precision

RPAREN
14,78
)

RBRACK
14,79
]

KW_SYNTAX
16,3
syntax

ID_UPPER
16,10
Int

DCOLONEQ
16,14
::=

ID_LOWER
16,18
exponentBitsFloat

LPAREN
16,35
(

ID_UPPER
16,36
Float

RPAREN
16,41
)

LBRACK
16,43
[

ATTR_KEY
16,44
function

COMMA
16,52
,

ATTR_KEY
16,54
total

COMMA
16,59
,

ATTR_KEY
16,61
hook

LPAREN
16,65
(

ATTR_CONTENT
16,66
FLOAT.exponentBits

RPAREN
16,84
)

RBRACK
16,85
]

KW_SYNTAX
18,3
syntax

ID_UPPER
18,10
Int

DCOLONEQ
18,14
::=

ID_LOWER
18,18
exponentFloat

LPAREN
18,31
(

ID_UPPER
18,32
Float

RPAREN
18,37
)

LBRACK
18,39
[

ATTR_KEY
18,40
function

COMMA
18,48
,

ATTR_KEY
18,50
total

COMMA
18,55
,

ATTR_KEY
18,57
hook

LPAREN
18,61
(

ATTR_CONTENT
18,62
FLOAT.exponent

RPAREN
18,76
)

RBRACK
18,77
]

KW_SYNTAX
20,3
syntax

ID_UPPER
20,10
Bool

DCOLONEQ
20,15
::=

ID_LOWER
20,19
signFloat

LPAREN
20,28
(

ID_UPPER
20,29
Float

RPAREN
20,34
)

LBRACK
20,41
[

ATTR_KEY
20,42
function

COMMA
20,50
,

ATTR_KEY
20,52
total

COMMA
20,57
,

ATTR_KEY
20,59
hook

LPAREN
20,63
(

ATTR_CONTENT
20,64
FLOAT.sign

RPAREN
20,74
)

RBRACK
20,75
]

KW_SYNTAX
22,3
syntax

ID_UPPER
22,10
Bool

DCOLONEQ
22,15
::=

ID_LOWER
22,19
isNaN

LPAREN
22,24
(

ID_UPPER
22,25
Float

RPAREN
22,30
)

LBRACK
22,41
[

ATTR_KEY
22,42
function

COMMA
22,50
,

ATTR_KEY
22,52
total

COMMA
22,57
,

ATTR_KEY
22,59
smt-hook

LPAREN
22,67
(

ATTR_CONTENT
22,68
fp.isNaN

RPAREN
22,76
)

COMMA
22,77
,

ATTR_KEY
22,79
hook

LPAREN
22,83
(

ATTR_CONTENT
22,84
FLOAT.isNaN

RPAREN
22,95
)

RBRACK
22,96
]

VBAR
23,17
|

ID_LOWER
23,19
isInfinite

LPAREN
23,29
(

ID_UPPER
23,30
Float

RPAREN
23,35
)

LBRACK
23,41
[

ATTR_KEY
23,42
function

COMMA
23,50
,

ATTR_KEY
23,52
total

RBRACK
23,57
]

KW_SYNTAX
25,3
syntax

ID_UPPER
25,10
Float

DCOLONEQ
25,16
::=

STRING
25,20
"--Float"

ID_UPPER
25,30
Float

LBRACK
25,48
[

ATTR_KEY
25,49
function

COMMA
25,57
,

ATTR_KEY
25,59
total

COMMA
25,64
,

ATTR_KEY
25,66
smt-hook

LPAREN
25,74
(

ATTR_CONTENT
25,75
fp.neg

RPAREN
25,81
)

COMMA
25,82
,

ATTR_KEY
25,84
hook

LPAREN
25,88
(

ATTR_CONTENT
25,89
FLOAT.neg

RPAREN
25,98
)

RBRACK
25,99
]

GT
26,18
>

ID_UPPER
26,20
Float

STRING
26,26
"^Float"

ID_UPPER
26,35
Float

LBRACK
26,48
[

ATTR_KEY
26,49
function

COMMA
26,57
,

ATTR_KEY
26,59
left

COMMA
26,63
,

ATTR_KEY
26,65
latex

LPAREN
26,70
(

ATTR_CONTENT
26,71
{#1}^{#2}

RPAREN
26,80
)

COMMA
26,81
,

ATTR_KEY
26,83
hook

LPAREN
26,87
(

ATTR_CONTENT
26,88
FLOAT.pow

RPAREN
26,97
)

RBRACK
26,98
]

GT
27,18
>

KW_LEFT
27,20
left

COLON
27,24
:

ID_UPPER
28,20
Float

STRING
28,26
"*Float"

ID_UPPER
28,35
Float

LBRACK
28,48
[

ATTR_KEY
28,49
function

COMMA
28,57
,

ATTR_KEY
28,59
left

COMMA
28,63
,

ATTR_KEY
28,65
smt-hook

LPAREN
28,73
(

ATTR_CONTENT
28,74
(fp.mul roundNearestTiesToEven #1 #2)

RPAREN
28,111
)

COMMA
28,112
,

ATTR_KEY
28,114
latex

LPAREN
28,119
(

ATTR_CONTENT
28,120
{#1}\mathrel{\ast_{\scriptstyle\it Float}}{#2}

RPAREN
28,166
)

COMMA
28,167
,

ATTR_KEY
28,169
hook

LPAREN
28,173
(

ATTR_CONTENT
28,174
FLOAT.mul

RPAREN
28,183
)

RBRACK
28,184
]

VBAR
29,18
|

ID_UPPER
29,20
Float

STRING
29,26
"/Float"

ID_UPPER
29,35
Float

LBRACK
29,48
[

ATTR_KEY
29,49
function

COMMA
29,57
,

ATTR_KEY
29,59
left

COMMA
29,63
,

ATTR_KEY
29,65
smt-hook

LPAREN
29,73
(

ATTR_CONTENT
29,74
(fp.div roundNearestTiesToEven #1 #2)

RPAREN
29,111
)

COMMA
29,112
,

ATTR_KEY
29,114
latex

LPAREN
29,119
(

ATTR_CONTENT
29,120
{#1}\mathrel{\div_{\scriptstyle\it Float}}{#2}

RPAREN
29,166
)

COMMA
29,167
,

ATTR_KEY
29,169
hook

LPAREN
29,173
(

ATTR_CONTENT
29,174
FLOAT.div

RPAREN
29,183
)

RBRACK
29,184
]

VBAR
30,18
|

ID_UPPER
30,20
Float

STRING
30,26
"%Float"

ID_UPPER
30,35
Float

LBRACK
30,48
[

ATTR_KEY
30,49
function

COMMA
30,57
,

ATTR_KEY
30,59
left

COMMA
30,63
,

ATTR_KEY
30,65
smt-hook

LPAREN
30,73
(

ATTR_CONTENT
30,74
(fp.rem roundNearestTiesToEven #1 #2)

RPAREN
30,111
)

COMMA
30,112
,

ATTR_KEY
30,114
latex

LPAREN
30,119
(

ATTR_CONTENT
30,120
{#1}\mathrel{\%_{\scriptstyle\it Float}}{#2}

RPAREN
30,164
)

COMMA
30,165
,

ATTR_KEY
30,167
hook

LPAREN
30,171
(

ATTR_CONTENT
30,172
FLOAT.rem

RPAREN
30,181
)

RBRACK
30,182
]

GT
31,18
>

KW_LEFT
31,20
left

COLON
31,24
:

ID_UPPER
32,20
Float

STRING
32,26
"+Float"

ID_UPPER
32,35
Float

LBRACK
32,48
[

ATTR_KEY
32,49
function

COMMA
32,57
,

ATTR_KEY
32,59
left

COMMA
32,63
,

ATTR_KEY
32,65
smt-hook

LPAREN
32,73
(

ATTR_CONTENT
32,74
(fp.add roundNearestTiesToEven #1 #2)

RPAREN
32,111
)

COMMA
32,112
,

ATTR_KEY
32,114
latex

LPAREN
32,119
(

ATTR_CONTENT
32,120
{#1}\mathrel{+_{\scriptstyle\it Float}}{#2}

RPAREN
32,163
)

COMMA
32,164
,

ATTR_KEY
32,166
hook

LPAREN
32,170
(

ATTR_CONTENT
32,171
FLOAT.add

RPAREN
32,180
)

RBRACK
32,181
]

VBAR
33,18
|

ID_UPPER
33,20
Float

STRING
33,26
"-Float"

ID_UPPER
33,35
Float

LBRACK
33,48
[

ATTR_KEY
33,49
function

COMMA
33,57
,

ATTR_KEY
33,59
left

COMMA
33,63
,

ATTR_KEY
33,65
smt-hook

LPAREN
33,73
(

ATTR_CONTENT
33,74
(fp.sub roundNearestTiesToEven #1 #2)

RPAREN
33,111
)

COMMA
33,112
,

ATTR_KEY
33,114
latex

LPAREN
33,119
(

ATTR_CONTENT
33,120
{#1}\mathrel{-_{\scriptstyle\it Float}}{#2}

RPAREN
33,163
)

COMMA
33,164
,

ATTR_KEY
33,166
hook

LPAREN
33,170
(

ATTR_CONTENT
33,171
FLOAT.sub

RPAREN
33,180
)

RBRACK
33,181
]

KW_SYNTAX
35,3
syntax

ID_UPPER
35,10
Float

DCOLONEQ
35,16
::=

ID_LOWER
35,20
rootFloat

LPAREN
35,29
(

ID_UPPER
35,30
Float

COMMA
35,35
,

ID_UPPER
35,37
Int

RPAREN
35,40
)

LBRACK
35,49
[

ATTR_KEY
35,50
function

COMMA
35,58
,

ATTR_KEY
35,60
hook

LPAREN
35,64
(

ATTR_CONTENT
35,65
FLOAT.root

RPAREN
35,75
)

RBRACK
35,76
]

VBAR
36,18
|

ID_LOWER
36,20
absFloat

LPAREN
36,28
(

ID_UPPER
36,29
Float

RPAREN
36,34
)

LBRACK
36,49
[

ATTR_KEY
36,50
function

COMMA
36,58
,

ATTR_KEY
36,60
total

COMMA
36,65
,

ATTR_KEY
36,67
smt-hook

LPAREN
36,75
(

ATTR_CONTENT
36,76
fp.abs

RPAREN
36,82
)

COMMA
36,83
,

ATTR_KEY
36,85
hook

LPAREN
36,89
(

ATTR_CONTENT
36,90
FLOAT.abs

RPAREN
36,99
)

RBRACK
36,100
]

VBAR
37,18
|

ID_LOWER
37,20
roundFloat

LPAREN
37,30
(

ID_UPPER
37,31
Float

COMMA
37,36
,

ID_LOWER
37,38
precision

COLON
37,47
:

ID_UPPER
37,49
Int

COMMA
37,52
,

ID_LOWER
37,54
exponentBits

COLON
37,66
:

ID_UPPER
37,68
Int

RPAREN
37,71
)

LBRACK
37,74
[

ATTR_KEY
37,75
function

COMMA
37,83
,

ATTR_KEY
37,85
hook

LPAREN
37,89
(

ATTR_CONTENT
37,90
FLOAT.round

RPAREN
37,101
)

RBRACK
37,102
]

VBAR
38,18
|

ID_LOWER
38,20
floorFloat

LPAREN
38,30
(

ID_UPPER
38,31
Float

RPAREN
38,36
)

LBRACK
38,49
[

ATTR_KEY
38,50
function

COMMA
38,58
,

ATTR_KEY
38,60
total

COMMA
38,65
,

ATTR_KEY
38,67
hook

LPAREN
38,71
(

ATTR_CONTENT
38,72
FLOAT.floor

RPAREN
38,83
)

RBRACK
38,84
]

VBAR
39,18
|

ID_LOWER
39,20
ceilFloat

LPAREN
39,29
(

ID_UPPER
39,30
Float

RPAREN
39,35
)

LBRACK
39,49
[

ATTR_KEY
39,50
function

COMMA
39,58
,

ATTR_KEY
39,60
total

COMMA
39,65
,

ATTR_KEY
39,67
hook

LPAREN
39,71
(

ATTR_CONTENT
39,72
FLOAT.ceil

RPAREN
39,82
)

RBRACK
39,83
]

VBAR
40,18
|

ID_LOWER
40,20
truncFloat

LPAREN
40,30
(

ID_UPPER
40,31
Float

RPAREN
40,36
)

LBRACK
40,49
[

ATTR_KEY
40,50
function

COMMA
40,58
,

ATTR_KEY
40,60
total

COMMA
40,65
,

ATTR_KEY
40,67
hook

LPAREN
40,71
(

ATTR_CONTENT
40,72
FLOAT.trunc

RPAREN
40,83
)

RBRACK
40,84
]

VBAR
41,18
|

ID_LOWER
41,20
expFloat

LPAREN
41,28
(

ID_UPPER
41,29
Float

RPAREN
41,34
)

LBRACK
41,49
[

ATTR_KEY
41,50
function

COMMA
41,58
,

ATTR_KEY
41,60
total

COMMA
41,65
,

ATTR_KEY
41,67
hook

LPAREN
41,71
(

ATTR_CONTENT
41,72
FLOAT.exp

RPAREN
41,81
)

RBRACK
41,82
]

VBAR
42,18
|

ID_LOWER
42,20
logFloat

LPAREN
42,28
(

ID_UPPER
42,29
Float

RPAREN
42,34
)

LBRACK
42,49
[

ATTR_KEY
42,50
function

COMMA
42,58
,

ATTR_KEY
42,60
hook

LPAREN
42,64
(

ATTR_CONTENT
42,65
FLOAT.log

RPAREN
42,74
)

RBRACK
42,75
]

VBAR
43,18
|

ID_LOWER
43,20
sinFloat

LPAREN
43,28
(

ID_UPPER
43,29
Float

RPAREN
43,34
)

LBRACK
43,49
[

ATTR_KEY
43,50
function

COMMA
43,58
,

ATTR_KEY
43,60
total

COMMA
43,65
,

ATTR_KEY
43,67
hook

LPAREN
43,71
(

ATTR_CONTENT
43,72
FLOAT.sin

RPAREN
43,81
)

RBRACK
43,82
]

VBAR
44,18
|

ID_LOWER
44,20
cosFloat

LPAREN
44,28
(

ID_UPPER
44,29
Float

RPAREN
44,34
)

LBRACK
44,49
[

ATTR_KEY
44,50
function

COMMA
44,58
,

ATTR_KEY
44,60
total

COMMA
44,65
,

ATTR_KEY
44,67
hook

LPAREN
44,71
(

ATTR_CONTENT
44,72
FLOAT.cos

RPAREN
44,81
)

RBRACK
44,82
]

VBAR
45,18
|

ID_LOWER
45,20
tanFloat

LPAREN
45,28
(

ID_UPPER
45,29
Float

RPAREN
45,34
)

LBRACK
45,49
[

ATTR_KEY
45,50
function

COMMA
45,58
,

ATTR_KEY
45,60
hook

LPAREN
45,64
(

ATTR_CONTENT
45,65
FLOAT.tan

RPAREN
45,74
)

RBRACK
45,75
]

VBAR
46,18
|

ID_LOWER
46,20
asinFloat

LPAREN
46,29
(

ID_UPPER
46,30
Float

RPAREN
46,35
)

LBRACK
46,49
[

ATTR_KEY
46,50
function

COMMA
46,58
,

ATTR_KEY
46,60
hook

LPAREN
46,64
(

ATTR_CONTENT
46,65
FLOAT.asin

RPAREN
46,75
)

RBRACK
46,76
]

VBAR
47,18
|

ID_LOWER
47,20
acosFloat

LPAREN
47,29
(

ID_UPPER
47,30
Float

RPAREN
47,35
)

LBRACK
47,49
[

ATTR_KEY
47,50
function

COMMA
47,58
,

ATTR_KEY
47,60
hook

LPAREN
47,64
(

ATTR_CONTENT
47,65
FLOAT.acos

RPAREN
47,75
)

RBRACK
47,76
]

VBAR
48,18
|

ID_LOWER
48,20
atanFloat

LPAREN
48,29
(

ID_UPPER
48,30
Float

RPAREN
48,35
)

LBRACK
48,49
[

ATTR_KEY
48,50
function

COMMA
48,58
,

ATTR_KEY
48,60
total

COMMA
48,65
,

ATTR_KEY
48,67
hook

LPAREN
48,71
(

ATTR_CONTENT
48,72
FLOAT.atan

RPAREN
48,82
)

RBRACK
48,83
]

VBAR
49,18
|

ID_LOWER
49,20
atan2Float

LPAREN
49,30
(

ID_UPPER
49,31
Float

COMMA
49,36
,

ID_UPPER
49,38
Float

RPAREN
49,43
)

LBRACK
49,49
[

ATTR_KEY
49,50
function

COMMA
49,58
,

ATTR_KEY
49,60
hook

LPAREN
49,64
(

ATTR_CONTENT
49,65
FLOAT.atan2

RPAREN
49,76
)

RBRACK
49,77
]

VBAR
50,18
|

ID_LOWER
50,20
maxFloat

LPAREN
50,28
(

ID_UPPER
50,29
Float

COMMA
50,34
,

ID_UPPER
50,36
Float

RPAREN
50,41
)

LBRACK
50,49
[

ATTR_KEY
50,50
function

COMMA
50,58
,

ATTR_KEY
50,60
smt-hook

LPAREN
50,68
(

ATTR_CONTENT
50,69
fp.max

RPAREN
50,75
)

COMMA
50,76
,

ATTR_KEY
50,78
hook

LPAREN
50,82
(

ATTR_CONTENT
50,83
FLOAT.max

RPAREN
50,92
)

RBRACK
50,93
]

VBAR
51,18
|

ID_LOWER
51,20
minFloat

LPAREN
51,28
(

ID_UPPER
51,29
Float

COMMA
51,34
,

ID_UPPER
51,36
Float

RPAREN
51,41
)

LBRACK
51,49
[

ATTR_KEY
51,50
function

COMMA
51,58
,

ATTR_KEY
51,60
smt-hook

LPAREN
51,68
(

ATTR_CONTENT
51,69
fp.min

RPAREN
51,75
)

COMMA
51,76
,

ATTR_KEY
51,78
hook

LPAREN
51,82
(

ATTR_CONTENT
51,83
FLOAT.min

RPAREN
51,92
)

RBRACK
51,93
]

VBAR
52,18
|

ID_LOWER
52,20
sqrtFloat

LPAREN
52,29
(

ID_UPPER
52,30
Float

RPAREN
52,35
)

LBRACK
52,49
[

ATTR_KEY
52,50
function

RBRACK
52,58
]

VBAR
53,18
|

ID_LOWER
53,20
maxValueFloat

LPAREN
53,33
(

ID_LOWER
53,34
precision

COLON
53,43
:

ID_UPPER
53,45
Int

COMMA
53,48
,

ID_LOWER
53,50
exponentBits

COLON
53,62
:

ID_UPPER
53,64
Int

RPAREN
53,67
)

LBRACK
53,74
[

ATTR_KEY
53,75
function

COMMA
53,83
,

ATTR_KEY
53,85
hook

LPAREN
53,89
(

ATTR_CONTENT
53,90
FLOAT.maxValue

RPAREN
53,104
)

RBRACK
53,105
]

VBAR
54,18
|

ID_LOWER
54,20
minValueFloat

LPAREN
54,33
(

ID_LOWER
54,34
precision

COLON
54,43
:

ID_UPPER
54,45
Int

COMMA
54,48
,

ID_LOWER
54,50
exponentBits

COLON
54,62
:

ID_UPPER
54,64
Int

RPAREN
54,67
)

LBRACK
54,74
[

ATTR_KEY
54,75
function

COMMA
54,83
,

ATTR_KEY
54,85
hook

LPAREN
54,89
(

ATTR_CONTENT
54,90
FLOAT.minValue

RPAREN
54,104
)

RBRACK
54,105
]

KW_SYNTAX
56,3
syntax

ID_UPPER
56,10
Bool

DCOLONEQ
56,15
::=

ID_UPPER
56,19
Float

STRING
56,25
"<=Float"

ID_UPPER
56,35
Float

LBRACK
56,47
[

ATTR_KEY
56,48
function

COMMA
56,56
,

ATTR_KEY
56,58
smt-hook

LPAREN
56,66
(

ATTR_CONTENT
56,67
fp.leq

RPAREN
56,73
)

COMMA
56,74
,

ATTR_KEY
56,76
latex

LPAREN
56,81
(

ATTR_CONTENT
56,82
{#1}\mathrel{\leq_{\scriptstyle\it Float}}{#2}

RPAREN
56,128
)

COMMA
56,129
,

ATTR_KEY
56,131
hook

LPAREN
56,135
(

ATTR_CONTENT
56,136
FLOAT.le

RPAREN
56,144
)

RBRACK
56,145
]

VBAR
57,17
|

ID_UPPER
57,19
Float

STRING
57,25
"<Float"

ID_UPPER
57,34
Float

LBRACK
57,47
[

ATTR_KEY
57,48
function

COMMA
57,56
,

ATTR_KEY
57,58
smt-hook

LPAREN
57,66
(

ATTR_CONTENT
57,67
fp.lt

RPAREN
57,72
)

COMMA
57,73
,

ATTR_KEY
57,75
latex

LPAREN
57,80
(

ATTR_CONTENT
57,81
{#1}\mathrel{<_{\scriptstyle\it Float}}{#2}

RPAREN
57,124
)

COMMA
57,125
,

ATTR_KEY
57,127
hook

LPAREN
57,131
(

ATTR_CONTENT
57,132
FLOAT.lt

RPAREN
57,140
)

RBRACK
57,141
]

VBAR
58,17
|

ID_UPPER
58,19
Float

STRING
58,25
">=Float"

ID_UPPER
58,35
Float

LBRACK
58,47
[

ATTR_KEY
58,48
function

COMMA
58,56
,

ATTR_KEY
58,58
smt-hook

LPAREN
58,66
(

ATTR_CONTENT
58,67
fp.geq

RPAREN
58,73
)

COMMA
58,74
,

ATTR_KEY
58,76
latex

LPAREN
58,81
(

ATTR_CONTENT
58,82
{#1}\mathrel{\geq_{\scriptstyle\it Float}}{#2}

RPAREN
58,128
)

COMMA
58,129
,

ATTR_KEY
58,131
hook

LPAREN
58,135
(

ATTR_CONTENT
58,136
FLOAT.ge

RPAREN
58,144
)

RBRACK
58,145
]

VBAR
59,17
|

ID_UPPER
59,19
Float

STRING
59,25
">Float"

ID_UPPER
59,34
Float

LBRACK
59,47
[

ATTR_KEY
59,48
function

COMMA
59,56
,

ATTR_KEY
59,58
smt-hook

LPAREN
59,66
(

ATTR_CONTENT
59,67
fg.gt

RPAREN
59,72
)

COMMA
59,73
,

ATTR_KEY
59,75
latex

LPAREN
59,80
(

ATTR_CONTENT
59,81
{#1}\mathrel{>_{\scriptstyle\it Float}}{#2}

RPAREN
59,124
)

COMMA
59,125
,

ATTR_KEY
59,127
hook

LPAREN
59,131
(

ATTR_CONTENT
59,132
FLOAT.gt

RPAREN
59,140
)

RBRACK
59,141
]

VBAR
60,17
|

ID_UPPER
60,19
Float

STRING
60,25
"==Float"

ID_UPPER
60,35
Float

LBRACK
60,47
[

ATTR_KEY
60,48
function

COMMA
60,56
,

ATTR_KEY
60,58
comm

COMMA
60,62
,

ATTR_KEY
60,64
smt-hook

LPAREN
60,72
(

ATTR_CONTENT
60,73
fp.eq

RPAREN
60,78
)

COMMA
60,79
,

ATTR_KEY
60,81
latex

LPAREN
60,86
(

ATTR_CONTENT
60,87
{#1}\mathrel{==_{\scriptstyle\it Float}}{#2}

RPAREN
60,131
)

COMMA
60,132
,

ATTR_KEY
60,134
hook

LPAREN
60,138
(

ATTR_CONTENT
60,139
FLOAT.eq

RPAREN
60,147
)

COMMA
60,148
,

ATTR_KEY
60,150
klabel

LPAREN
60,156
(

ATTR_CONTENT
60,157
_==Float_

RPAREN
60,166
)

RBRACK
60,167
]

VBAR
61,17
|

ID_UPPER
61,19
Float

STRING
61,25
"=/=Float"

ID_UPPER
61,36
Float

LBRACK
61,47
[

ATTR_KEY
61,48
function

COMMA
61,56
,

ATTR_KEY
61,58
comm

COMMA
61,62
,

ATTR_KEY
61,64
smt-hook

LPAREN
61,72
(

ATTR_CONTENT
61,73
(not (fp.eq #1 #2))

RPAREN
61,92
)

COMMA
61,93
,

ATTR_KEY
61,95
latex

LPAREN
61,100
(

ATTR_CONTENT
61,101
{#1}\mathrel{\neq_{\scriptstyle\it Float}}{#2}

RPAREN
61,147
)

RBRACK
61,148
]

KW_RULE
63,3
rule

BUBBLE
63,8
F1:Float =/=Float F2:Float => notBool (F1 ==Float F2)

KW_SYNTAX
65,3
syntax

ID_UPPER
65,10
Float

DCOLONEQ
65,16
::=

ID_UPPER
65,20
Int2Float

LPAREN
65,29
(

ID_UPPER
65,30
Int

COMMA
65,33
,

ID_LOWER
65,35
precision

COLON
65,44
:

ID_UPPER
65,46
Int

COMMA
65,49
,

ID_LOWER
65,51
exponentBits

COLON
65,63
:

ID_UPPER
65,65
Int

RPAREN
65,68
)

LBRACK
65,73
[

ATTR_KEY
65,74
function

COMMA
65,82
,

ATTR_KEY
65,84
latex

LPAREN
65,89
(

ATTR_CONTENT
65,90
{\\it{}Int2Float}

RPAREN
65,107
)

COMMA
65,108
,

ATTR_KEY
65,110
hook

LPAREN
65,114
(

ATTR_CONTENT
65,115
FLOAT.int2float

RPAREN
65,130
)

RBRACK
65,131
]

KW_SYNTAX
66,3
syntax

ID_UPPER
66,10
Int

DCOLONEQ
66,14
::=

ID_UPPER
66,18
Float2Int

LPAREN
66,27
(

ID_UPPER
66,28
Float

RPAREN
66,33
)

LBRACK
66,38
[

ATTR_KEY
66,39
function

COMMA
66,47
,

ATTR_KEY
66,49
total

COMMA
66,54
,

ATTR_KEY
66,56
latex

LPAREN
66,61
(

ATTR_CONTENT
66,62
{\\it{}Float2Int}

RPAREN
66,79
)

COMMA
66,80
,

ATTR_KEY
66,82
hook

LPAREN
66,86
(

ATTR_CONTENT
66,87
FLOAT.float2int

RPAREN
66,102
)

RBRACK
66,103
]

KW_RULE
68,3
rule

BUBBLE
68,8
sqrtFloat(F:Float) => rootFloat(F, 2)

KW_RULE
70,3
rule

BUBBLE
70,8
isInfinite(F:Float) => F >Float maxValueFloat(precisionFloat(F), exponentBitsFloat(F)) orBool F <Float --Float maxValueFloat(precisionFloat(F), exponentBitsFloat(F))

KW_ENDMODULE
72,1
endmodule

EOF
72,9

