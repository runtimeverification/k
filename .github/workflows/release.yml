name: 'Release'
on:
  push:
    branches:
      - fix-release-2
concurrency:
  group: ${{ github.workflow }}

jobs:

  set-release-id:
    name: 'Set Release ID'
    runs-on: ubuntu-20.04
    steps:
      - name: 'Get release_id'
        run: echo "release_id=$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)" >> ${GITHUB_OUTPUT}
        id: release
    outputs:
      release_id: ${{ steps.release.outputs.release_id }}

  source-tarball:
    name: 'Create source tarball'
    runs-on: ubuntu-latest
    environment: production
    needs: set-release-id
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: 'Create source tarball'
        env:
          RELEASE_ID: ${{ needs.set-release-id.outputs.release_id }}
        run: |
          set -x
          find . -name .git | xargs rm -r
          CURDIR=$(pwd)
          cd ..
          tar czvf kframework-${RELEASE_ID}-src.tar.gz
          mv kframework-${RELEASE_ID}-src.tar.gz ${CURDIR}/
      - name: 'Upload Source Tarball to Release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.JENKINS_GITHUB_PAT }}
        with:
          asset_content_type: 'application/gzip'
          asset_name: kframework-${{ needs.set-release-id.outputs.release_id }}-src.tar.gz
          asset_path: kframework-${{ needs.set-release-id.outputs.release_id }}-src.tar.gz
          upload_url: ${{ github.event.release.upload_url }}
