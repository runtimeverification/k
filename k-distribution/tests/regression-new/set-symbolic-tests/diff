claim <k> diff ( .Set                 -Set SetItem(x) )           => . </k>
claim <k> diff ( .Set                 -Set S )                    => . </k>
claim <k> diff ( S                    -Set .Set )                 => . </k>
claim <k> diff ( (S  SetItem(X:MyId)) -Set SetItem(X) )           => . </k>
claim <k> diff ( (S  SetItem(X:MyId)) -Set SetItem(Y:MyId) )      => . </k>
claim <k> diff ( (S  SetItem(X:MyId)) -Set SetItem(Y:MyId) )      => . </k> requires Y =/=K X
claim <k> diff ( (S  SetItem(X:MyId)) -Set SetItem(Y:MyId) )      => . </k> requires Y in S
claim <k> diff ( (S  SetItem(X:MyId)) -Set SetItem(Y:MyId) )      => . </k> requires notBool (Y in S)
claim <k> diff ( (S  SetItem(X:MyId)) -Set SetItem(Y:MyId) )      => . </k> requires notBool (Y in S) andBool Y =/=K X
claim <k> diff ( SetItem(X)           -Set (S SetItem(X:MyId)) )  => . </k>
claim <k> diff ( SetItem(Y:MyId)      -Set (S SetItem(X:MyId)) )  => . </k>
claim <k> diff ( SetItem(Y:MyId)      -Set (S SetItem(X:MyId)) )  => . </k> requires Y =/=K X
claim <k> diff ( SetItem(Y:MyId)      -Set (S SetItem(X:MyId)) )  => . </k> requires Y in S
claim <k> diff ( SetItem(Y:MyId)      -Set (S SetItem(X:MyId)) )  => . </k> requires notBool (Y in S)
claim <k> diff ( SetItem(Y:MyId)      -Set (S SetItem(X:MyId)) )  => . </k> requires notBool (Y in S) andBool Y =/=K X
claim <k> diff ( (S  SetItem(X:MyId)) -Set S )                    => . </k>
claim <k> diff ( (S1 SetItem(X:MyId)) -Set S2 )                   => . </k>
claim <k> diff ( S                    -Set (S  SetItem(X:MyId)) ) => . </k>
claim <k> diff ( S1                   -Set (S2 SetItem(X:MyId)) ) => . </k>

claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y  ==K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y  ==K X andBool Z  ==K Y andBool Z  ==K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y  ==K X andBool Z =/=K Y andBool Z =/=K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y =/=K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y =/=K X andBool                  Z =/=K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y =/=K X andBool                  Z  ==K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y =/=K X andBool Z =/=K Y
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y =/=K X andBool Z =/=K Y andBool Z =/=K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y =/=K X andBool Z =/=K Y andBool Z  ==K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Y =/=K X andBool Z  ==K Y andBool Z =/=K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k>
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Z  ==K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Z =/=K X
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Z  ==K Y
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Z =/=K Y
claim <k> diff ( Z:MyId in ( (S SetItem(X:MyId)) -Set SetItem(Y:MyId) ) )     => . </k> requires Z =/=K Y andBool Z =/=K X
claim <k> diff ( X      in ( (SetItem(X:MyId) SetItem(y)) -Set SetItem(x) ) ) => . </k>
claim <k> diff ( X      in ( (SetItem(X:MyId) SetItem(y)) -Set SetItem(x) ) ) => . </k> requires X =/=K x
