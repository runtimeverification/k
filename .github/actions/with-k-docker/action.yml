name: 'With K Docker'
description: 'Start a Docker container with the K .deb package installed'
inputs:
  container-name:
    description: 'Docker container name to use'
    required: true
    type: string
  k-deb-path:
    description: 'Path to K .deb file'
    required: true
    type: string
    default: kframework.deb
  install-backend-debs:
    description: 'Whether to install a separate package for the LLVM backend'
    required: true
    type: boolean
    default: true
  distro:
    description: 'Distribution to setup Docker for.'
    required: true
    type: string
    default: jammy
  run-container:
    description: 'Run the K container automatically with default settings.'
    required: true
    type: boolean
    default: true
runs:
  using: 'composite'
  steps:
  - name: 'Set up Docker'
    shell: bash {0}
    env:
      BASE_DISTRO: ${{ inputs.distro }}
      GH_TOKEN: ${{ github.token }}
      INSTALL_BACKEND_DEBS: ${{ inputs.install-backend-debs }}
    run: |
      set -euxo pipefail

      CONTAINER_NAME=${{ inputs.container-name }}
      TAG=runtimeverificationinc/${CONTAINER_NAME}
      DOCKERFILE=${{ github.action_path }}/Dockerfile
      K_DEB_PATH=${{ inputs.k-deb-path }}
      LLVM_BACKEND_DEB_PATH=llvm-backend.deb
      HASKELL_BACKEND_DEB_PATH=haskell-backend.deb

      gh release download                           \
        --repo runtimeverification/llvm-backend     \
        --pattern "*ubuntu_${BASE_DISTRO}.deb"      \
        --output "${LLVM_BACKEND_DEB_PATH}"         \
        v$(cat deps/llvm-backend_release)

      gh release download                           \
        --repo runtimeverification/haskell-backend  \
        --pattern "*ubuntu_${BASE_DISTRO}.deb"      \
        --output "${HASKELL_BACKEND_DEB_PATH}"      \
        $(cat deps/haskell-backend_release)

      docker build . \
        --file ${DOCKERFILE}                                        \
        --tag ${TAG}                                                \
        --build-arg BASE_DISTRO=${BASE_DISTRO}                      \
        --build-arg K_DEB_PATH=${K_DEB_PATH}                        \
        --build-arg INSTALL_BACKEND_DEBS=${INSTALL_BACKEND_DEBS}    \
        --build-arg LLVM_BACKEND_DEB_PATH=${LLVM_BACKEND_DEB_PATH}  \
        --build-arg HASKELL_BACKEND_DEB_PATH=${HASKELL_BACKEND_DEB_PATH}

  - name: 'Run Docker container'
    shell: bash {0}
    if: ${{ inputs.run-container == 'true' }}
    run: |
      set -euxo pipefail

      CONTAINER_NAME=${{ inputs.container-name }}
      TAG=runtimeverificationinc/${CONTAINER_NAME}

      docker run                 \
        --name ${CONTAINER_NAME} \
        --rm                     \
        --interactive            \
        --tty                    \
        --detach                 \
        --user root              \
        ${TAG}

      docker cp ./pyk/. ${CONTAINER_NAME}:/home/user
      docker exec ${CONTAINER_NAME} chown -R user:user /home/user
