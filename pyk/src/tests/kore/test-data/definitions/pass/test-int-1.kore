[]
module K
    sort K{} []
endmodule
[]

module BOOL
    hooked-sort Bool{} [hook{}("BOOL.Bool")]
endmodule
[]

module INT
    import K []
    import BOOL []
    hooked-sort Int{} [hook{}("INT.Int"), hasDomainValues{}()]
    hooked-symbol bitRangeInt{}(Int{}, Int{}, Int{}) : Int{} [hook{}("INT.bitRange")]
    hooked-symbol geInt{}(Int{}, Int{}) : Bool{} [hook{}("INT.ge")]
    hooked-symbol xorInt{}(Int{}, Int{}) : Int{} [hook{}("INT.xor")]
    hooked-symbol addInt{}(Int{}, Int{}) : Int{} [hook{}("INT.add")]
    hooked-symbol neInt{}(Int{}, Int{}) : Bool{} [hook{}("INT.ne")]
    hooked-symbol randInt{}(Int{}) : Int{} [hook{}("INT.rand")]
    hooked-symbol leInt{}(Int{}, Int{}) : Bool{} [hook{}("INT.le")]
    hooked-symbol log2Int{}(Int{}) : Int{} [hook{}("INT.log2")]
    hooked-symbol andInt{}(Int{}, Int{}) : Int{} [hook{}("INT.and")]
    hooked-symbol srandInt{}(Int{}) : K{} [hook{}("INT.srand")]
    hooked-symbol edivInt{}(Int{}, Int{}) : Int{} [hook{}("INT.ediv")]
    hooked-symbol powmodInt{}(Int{}, Int{}, Int{}) : Int{} [hook{}("INT.powmod")]
    hooked-symbol eqInt{}(Int{}, Int{}) : Bool{} [hook{}("INT.eq")]
    hooked-symbol tmodInt{}(Int{}, Int{}) : Int{} [hook{}("INT.tmod")]
    hooked-symbol absInt{}(Int{}) : Int{} [hook{}("INT.abs")]
    hooked-symbol notInt{}(Int{}) : Int{} [hook{}("INT.not")]
    hooked-symbol shlInt{}(Int{}, Int{}) : Int{} [hook{}("INT.shl")]
    hooked-symbol signExtendBitRangeInt{}(Int{}, Int{}, Int{}) : Int{} [hook{}("INT.signExtendBitRange")]
    hooked-symbol emodInt{}(Int{}, Int{}) : Int{} [hook{}("INT.emod")]
    hooked-symbol orInt{}(Int{}, Int{}) : Int{} [hook{}("INT.or")]
    hooked-symbol shrInt{}(Int{}, Int{}) : Int{} [hook{}("INT.shr")]
    hooked-symbol mulInt{}(Int{}, Int{}) : Int{} [hook{}("INT.mul")]
    hooked-symbol gtInt{}(Int{}, Int{}) : Bool{} [hook{}("INT.gt")]
    hooked-symbol tdivInt{}(Int{}, Int{}) : Int{} [hook{}("INT.tdiv")]
    hooked-symbol minInt{}(Int{}, Int{}) : Int{} [hook{}("INT.min")]
    hooked-symbol ltInt{}(Int{}, Int{}) : Bool{} [hook{}("INT.lt")]
    hooked-symbol subInt{}(Int{}, Int{}) : Int{} [hook{}("INT.sub")]
    hooked-symbol maxInt{}(Int{}, Int{}) : Int{} [hook{}("INT.max")]
    hooked-symbol pow{}(Int{}, Int{}) : Int{} [hook{}("INT.pow")]
    alias zeroInt{}() : Int{} where zeroInt{}() := \dv{Int{}}("0") []
    alias oneInt{}() : Int{} where oneInt{}() := \dv{Int{}}("1") []
endmodule
[]
