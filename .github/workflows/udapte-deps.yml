name: 'Update Nix Flake Inputs'
on:
  push:
    branches:
      - '_update-deps_runtimeverification_haskell-backend'
      - '_update-deps_runtimeverification_llvm-backend'
  workflow_dispatch:
# Stop in progress workflows on the same branch and same workflow to use latest committed code
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  nix-flake-submodule-sync:
    name: 'Nix flake submodule sync'
    runs-on: ubuntu-latest
    steps:
      - id: config
        run: |
          ref=${{ github.ref }}
          if [ "${{ github.event_name }}" == 'pull_request' ]; then
            ref="${{ github.event.pull_request.head.sha }}"
          fi
          ref="${ref#refs/heads/}"
          echo "::set-output name=ref::$ref"
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          ref: ${{ steps.config.outputs.ref }}
          submodules: recursive

      - name: 'Install Nix'
        uses: cachix/install-nix-action@v15
        with:
          extra_nix_config: |
            substituters = http://cache.nixos.org https://cache.iog.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

      - name: 'Install Cachix'
        uses: cachix/cachix-action@v10
        with:
          name: runtimeverification
          extraPullNames: kore
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'


      - name: Update Nix flake inputs from submodules
        run: |
          if ! GC_DONT_GC=1 nix run .#check-submodules ; then
            GC_DONT_GC=1 nix run .#update-from-submodules
            git add 'flake.lock'
            git commit -m 'Sync flake inputs to submodules'
            git push
          fi
