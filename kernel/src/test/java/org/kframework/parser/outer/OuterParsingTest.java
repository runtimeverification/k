// Copyright (c) 2014-2019 K Team. All Rights Reserved.
package org.kframework.parser.outer;

import java.util.List;

import junit.framework.Assert;

import org.junit.Test;
import org.kframework.attributes.Source;
import org.kframework.kil.DefinitionItem;
import org.kframework.kil.Import;
import org.kframework.kil.Module;
import org.kframework.kil.StringSentence;

public class OuterParsingTest {

    @Test
    public void testEmptyRules() {
        String def = "module TEST rule endmodule";

        List<DefinitionItem> defItemList = Outer.parse(Source.apply("generated by OuterParsingTests"), def, null);
        Assert.assertEquals(1, defItemList.size());

        Module mod = (Module) defItemList.get(0);
        Assert.assertEquals(1, mod.getItems().size());
        StringSentence sen = (StringSentence) mod.getItems().get(0);
        Assert.assertEquals(sen.getContent(), "");
    }

    @Test
    public void testClaimKeyword() throws Exception {
        String def = "module TEST claim X => Y endmodule";

        List<DefinitionItem> defItemList = Outer.parse(Source.apply("generated by OuterParsingTests"), def, null);
        Assert.assertEquals(1, defItemList.size());

        Module mod = (Module) defItemList.get(0);
        Assert.assertEquals(1, mod.getItems().size());
        StringSentence sen = (StringSentence) mod.getItems().get(0);
        Assert.assertEquals(sen.getContent(), "X => Y");
        Assert.assertEquals(sen.getType(), "claim");
    }

    @Test
    public void testImport() {
        String def = "module A endmodule module TEST imports A imports private A imports public A imports A.foo endmodule";

        List<DefinitionItem> defItemList = Outer.parse(Source.apply("generated by OuterParsingTestes"), def, null);
        Assert.assertEquals(2, defItemList.size());

        Module a = (Module) defItemList.get(0);
        Assert.assertEquals(0, a.getItems().size());

        Module mod = (Module) defItemList.get(1);
        Assert.assertEquals(4, mod.getItems().size());

        Import sen = (Import) mod.getItems().get(0);
        Assert.assertEquals(true, sen.isPublic());
        Assert.assertEquals(null, sen.getTag());

        sen = (Import) mod.getItems().get(1);
        Assert.assertEquals(false, sen.isPublic());
        Assert.assertEquals(null, sen.getTag());

        sen = (Import) mod.getItems().get(2);
        Assert.assertEquals(true, sen.isPublic());
        Assert.assertEquals(null, sen.getTag());

        sen = (Import) mod.getItems().get(3);
        Assert.assertEquals(true, sen.isPublic());
        Assert.assertEquals("foo", sen.getTag());
    }
}
