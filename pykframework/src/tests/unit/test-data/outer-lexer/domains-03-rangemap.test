module RANGEMAP
  imports private BOOL-SYNTAX
  imports private INT-SYNTAX
  imports private LIST
  imports private SET

  syntax Range ::= "[" KItem "," KItem ")"    [klabel(Rangemap:Range), symbol]

  syntax RangeMap [hook(RANGEMAP.RangeMap)]
  syntax RangeMap ::= RangeMap RangeMap                        [left, function, hook(RANGEMAP.concat), klabel(_RangeMap_), symbol, assoc, comm, unit(.RangeMap), element(_r|->_), index(0), format(%1%n%2)]
  syntax RangeMap ::= ".RangeMap"                         [function, total, hook(RANGEMAP.unit), klabel(.RangeMap), symbol, latex(\dotCt{RangeMap})]
  syntax RangeMap ::= Range "r|->" KItem                      [function, hook(RANGEMAP.elementRng), klabel(_r|->_), symbol, latex({#1}\mapsto{#2}), injective]

  syntax priority _r|->_ > _RangeMap_ .RangeMap
  syntax non-assoc _r|->_

  syntax KItem ::= RangeMap "[" KItem "]"                    [function, hook(RANGEMAP.lookup), klabel(RangeMap:lookup), symbol]
  syntax KItem ::= RangeMap "[" KItem "]" "orDefault" KItem      [function, total, hook(RANGEMAP.lookupOrDefault), klabel(RangeMap:lookupOrDefault)]
  syntax Range ::= "find_range" "(" RangeMap "," KItem ")"                    [function, hook(RANGEMAP.find_range), klabel(RangeMap:find_range)]
  syntax RangeMap ::= RangeMap "[" keyRange: Range "<-" value: KItem "]"           [function, klabel(RangeMap:update), symbol, hook(RANGEMAP.updateRng), prefer]
  syntax RangeMap ::= RangeMap "[" Range "<-" "undef" "]"     [function, hook(RANGEMAP.removeRng), klabel(_r[_<-undef]), symbol]
  syntax RangeMap ::= RangeMap "-RangeMap" RangeMap                 [function, total, hook(RANGEMAP.difference), latex({#1}-_{\it RangeMap}{#2})]
  syntax RangeMap ::= updateRangeMap(RangeMap, RangeMap)            [function, total, hook(RANGEMAP.updateAll)]
  syntax RangeMap ::= removeAll(RangeMap, Set)            [function, hook(RANGEMAP.removeAll)]
  syntax Set ::= keys(RangeMap)                      [function, total, hook(RANGEMAP.keys)]
  syntax List ::= "keys_list" "(" RangeMap ")"       [function, hook(RANGEMAP.keys_list)]
  syntax Bool ::= KItem "in_keys" "(" RangeMap ")"       [function, total, hook(RANGEMAP.in_keys)]
  syntax List ::= values(RangeMap)                   [function, hook(RANGEMAP.values)]
  syntax Int ::= size(RangeMap)                      [function, total, hook(RANGEMAP.size), klabel(sizeRangeMap)]
  syntax Bool ::= RangeMap "<=RangeMap" RangeMap               [function, total, hook(RANGEMAP.inclusion)]
  syntax KItem ::= choice(RangeMap)                      [function, hook(RANGEMAP.choice), klabel(RangeMap:choice)]
endmodule
===
KW_MODULE
1,1
module

MODNAME
1,8
RANGEMAP

KW_IMPORTS
2,3
imports

KW_PRIVATE
2,11
private

MODNAME
2,19
BOOL-SYNTAX

KW_IMPORTS
3,3
imports

KW_PRIVATE
3,11
private

MODNAME
3,19
INT-SYNTAX

KW_IMPORTS
4,3
imports

KW_PRIVATE
4,11
private

MODNAME
4,19
LIST

KW_IMPORTS
5,3
imports

KW_PRIVATE
5,11
private

MODNAME
5,19
SET

KW_SYNTAX
7,3
syntax

ID_UPPER
7,10
Range

DCOLONEQ
7,16
::=

STRING
7,20
"["

ID_UPPER
7,24
KItem

STRING
7,30
","

ID_UPPER
7,34
KItem

STRING
7,40
")"

LBRACK
7,47
[

ATTR_KEY
7,48
klabel

LPAREN
7,54
(

ATTR_CONTENT
7,55
Rangemap:Range

RPAREN
7,69
)

COMMA
7,70
,

ATTR_KEY
7,72
symbol

RBRACK
7,78
]

KW_SYNTAX
9,3
syntax

ID_UPPER
9,10
RangeMap

LBRACK
9,19
[

ATTR_KEY
9,20
hook

LPAREN
9,24
(

ATTR_CONTENT
9,25
RANGEMAP.RangeMap

RPAREN
9,42
)

RBRACK
9,43
]

KW_SYNTAX
10,3
syntax

ID_UPPER
10,10
RangeMap

DCOLONEQ
10,19
::=

ID_UPPER
10,23
RangeMap

ID_UPPER
10,32
RangeMap

LBRACK
10,64
[

ATTR_KEY
10,65
left

COMMA
10,69
,

ATTR_KEY
10,71
function

COMMA
10,79
,

ATTR_KEY
10,81
hook

LPAREN
10,85
(

ATTR_CONTENT
10,86
RANGEMAP.concat

RPAREN
10,101
)

COMMA
10,102
,

ATTR_KEY
10,104
klabel

LPAREN
10,110
(

ATTR_CONTENT
10,111
_RangeMap_

RPAREN
10,121
)

COMMA
10,122
,

ATTR_KEY
10,124
symbol

COMMA
10,130
,

ATTR_KEY
10,132
assoc

COMMA
10,137
,

ATTR_KEY
10,139
comm

COMMA
10,143
,

ATTR_KEY
10,145
unit

LPAREN
10,149
(

ATTR_CONTENT
10,150
.RangeMap

RPAREN
10,159
)

COMMA
10,160
,

ATTR_KEY
10,162
element

LPAREN
10,169
(

ATTR_CONTENT
10,170
_r|->_

RPAREN
10,176
)

COMMA
10,177
,

ATTR_KEY
10,179
index

LPAREN
10,184
(

ATTR_CONTENT
10,185
0

RPAREN
10,186
)

COMMA
10,187
,

ATTR_KEY
10,189
format

LPAREN
10,195
(

ATTR_CONTENT
10,196
%1%n%2

RPAREN
10,202
)

RBRACK
10,203
]

KW_SYNTAX
11,3
syntax

ID_UPPER
11,10
RangeMap

DCOLONEQ
11,19
::=

STRING
11,23
".RangeMap"

LBRACK
11,59
[

ATTR_KEY
11,60
function

COMMA
11,68
,

ATTR_KEY
11,70
total

COMMA
11,75
,

ATTR_KEY
11,77
hook

LPAREN
11,81
(

ATTR_CONTENT
11,82
RANGEMAP.unit

RPAREN
11,95
)

COMMA
11,96
,

ATTR_KEY
11,98
klabel

LPAREN
11,104
(

ATTR_CONTENT
11,105
.RangeMap

RPAREN
11,114
)

COMMA
11,115
,

ATTR_KEY
11,117
symbol

COMMA
11,123
,

ATTR_KEY
11,125
latex

LPAREN
11,130
(

ATTR_CONTENT
11,131
\dotCt{RangeMap}

RPAREN
11,147
)

RBRACK
11,148
]

KW_SYNTAX
12,3
syntax

ID_UPPER
12,10
RangeMap

DCOLONEQ
12,19
::=

ID_UPPER
12,23
Range

STRING
12,29
"r|->"

ID_UPPER
12,36
KItem

LBRACK
12,63
[

ATTR_KEY
12,64
function

COMMA
12,72
,

ATTR_KEY
12,74
hook

LPAREN
12,78
(

ATTR_CONTENT
12,79
RANGEMAP.elementRng

RPAREN
12,98
)

COMMA
12,99
,

ATTR_KEY
12,101
klabel

LPAREN
12,107
(

ATTR_CONTENT
12,108
_r|->_

RPAREN
12,114
)

COMMA
12,115
,

ATTR_KEY
12,117
symbol

COMMA
12,123
,

ATTR_KEY
12,125
latex

LPAREN
12,130
(

ATTR_CONTENT
12,131
{#1}\mapsto{#2}

RPAREN
12,146
)

COMMA
12,147
,

ATTR_KEY
12,149
injective

RBRACK
12,158
]

KW_SYNTAX
14,3
syntax

KW_PRIORITY
14,10
priority

KLABEL
14,19
_r|->_

GT
14,26
>

KLABEL
14,28
_RangeMap_

KLABEL
14,39
.RangeMap

KW_SYNTAX
15,3
syntax

KW_NONASSOC
15,10
non-assoc

KLABEL
15,20
_r|->_

KW_SYNTAX
17,3
syntax

ID_UPPER
17,10
KItem

DCOLONEQ
17,16
::=

ID_UPPER
17,20
RangeMap

STRING
17,29
"["

ID_UPPER
17,33
KItem

STRING
17,39
"]"

LBRACK
17,62
[

ATTR_KEY
17,63
function

COMMA
17,71
,

ATTR_KEY
17,73
hook

LPAREN
17,77
(

ATTR_CONTENT
17,78
RANGEMAP.lookup

RPAREN
17,93
)

COMMA
17,94
,

ATTR_KEY
17,96
klabel

LPAREN
17,102
(

ATTR_CONTENT
17,103
RangeMap:lookup

RPAREN
17,118
)

COMMA
17,119
,

ATTR_KEY
17,121
symbol

RBRACK
17,127
]

KW_SYNTAX
18,3
syntax

ID_UPPER
18,10
KItem

DCOLONEQ
18,16
::=

ID_UPPER
18,20
RangeMap

STRING
18,29
"["

ID_UPPER
18,33
KItem

STRING
18,39
"]"

STRING
18,43
"orDefault"

ID_UPPER
18,55
KItem

LBRACK
18,66
[

ATTR_KEY
18,67
function

COMMA
18,75
,

ATTR_KEY
18,77
total

COMMA
18,82
,

ATTR_KEY
18,84
hook

LPAREN
18,88
(

ATTR_CONTENT
18,89
RANGEMAP.lookupOrDefault

RPAREN
18,113
)

COMMA
18,114
,

ATTR_KEY
18,116
klabel

LPAREN
18,122
(

ATTR_CONTENT
18,123
RangeMap:lookupOrDefault

RPAREN
18,147
)

RBRACK
18,148
]

KW_SYNTAX
19,3
syntax

ID_UPPER
19,10
Range

DCOLONEQ
19,16
::=

STRING
19,20
"find_range"

STRING
19,33
"("

ID_UPPER
19,37
RangeMap

STRING
19,46
","

ID_UPPER
19,50
KItem

STRING
19,56
")"

LBRACK
19,79
[

ATTR_KEY
19,80
function

COMMA
19,88
,

ATTR_KEY
19,90
hook

LPAREN
19,94
(

ATTR_CONTENT
19,95
RANGEMAP.find_range

RPAREN
19,114
)

COMMA
19,115
,

ATTR_KEY
19,117
klabel

LPAREN
19,123
(

ATTR_CONTENT
19,124
RangeMap:find_range

RPAREN
19,143
)

RBRACK
19,144
]

KW_SYNTAX
20,3
syntax

ID_UPPER
20,10
RangeMap

DCOLONEQ
20,19
::=

ID_UPPER
20,23
RangeMap

STRING
20,32
"["

ID_LOWER
20,36
keyRange

COLON
20,44
:

ID_UPPER
20,46
Range

STRING
20,52
"<-"

ID_LOWER
20,57
value

COLON
20,62
:

ID_UPPER
20,64
KItem

STRING
20,70
"]"

LBRACK
20,84
[

ATTR_KEY
20,85
function

COMMA
20,93
,

ATTR_KEY
20,95
klabel

LPAREN
20,101
(

ATTR_CONTENT
20,102
RangeMap:update

RPAREN
20,117
)

COMMA
20,118
,

ATTR_KEY
20,120
symbol

COMMA
20,126
,

ATTR_KEY
20,128
hook

LPAREN
20,132
(

ATTR_CONTENT
20,133
RANGEMAP.updateRng

RPAREN
20,151
)

COMMA
20,152
,

ATTR_KEY
20,154
prefer

RBRACK
20,160
]

KW_SYNTAX
21,3
syntax

ID_UPPER
21,10
RangeMap

DCOLONEQ
21,19
::=

ID_UPPER
21,23
RangeMap

STRING
21,32
"["

ID_UPPER
21,36
Range

STRING
21,42
"<-"

STRING
21,47
"undef"

STRING
21,55
"]"

LBRACK
21,63
[

ATTR_KEY
21,64
function

COMMA
21,72
,

ATTR_KEY
21,74
hook

LPAREN
21,78
(

ATTR_CONTENT
21,79
RANGEMAP.removeRng

RPAREN
21,97
)

COMMA
21,98
,

ATTR_KEY
21,100
klabel

LPAREN
21,106
(

ATTR_CONTENT
21,107
_r[_<-undef]

RPAREN
21,119
)

COMMA
21,120
,

ATTR_KEY
21,122
symbol

RBRACK
21,128
]

KW_SYNTAX
22,3
syntax

ID_UPPER
22,10
RangeMap

DCOLONEQ
22,19
::=

ID_UPPER
22,23
RangeMap

STRING
22,32
"-RangeMap"

ID_UPPER
22,44
RangeMap

LBRACK
22,69
[

ATTR_KEY
22,70
function

COMMA
22,78
,

ATTR_KEY
22,80
total

COMMA
22,85
,

ATTR_KEY
22,87
hook

LPAREN
22,91
(

ATTR_CONTENT
22,92
RANGEMAP.difference

RPAREN
22,111
)

COMMA
22,112
,

ATTR_KEY
22,114
latex

LPAREN
22,119
(

ATTR_CONTENT
22,120
{#1}-_{\it RangeMap}{#2}

RPAREN
22,144
)

RBRACK
22,145
]

KW_SYNTAX
23,3
syntax

ID_UPPER
23,10
RangeMap

DCOLONEQ
23,19
::=

ID_LOWER
23,23
updateRangeMap

LPAREN
23,37
(

ID_UPPER
23,38
RangeMap

COMMA
23,46
,

ID_UPPER
23,48
RangeMap

RPAREN
23,56
)

LBRACK
23,69
[

ATTR_KEY
23,70
function

COMMA
23,78
,

ATTR_KEY
23,80
total

COMMA
23,85
,

ATTR_KEY
23,87
hook

LPAREN
23,91
(

ATTR_CONTENT
23,92
RANGEMAP.updateAll

RPAREN
23,110
)

RBRACK
23,111
]

KW_SYNTAX
24,3
syntax

ID_UPPER
24,10
RangeMap

DCOLONEQ
24,19
::=

ID_LOWER
24,23
removeAll

LPAREN
24,32
(

ID_UPPER
24,33
RangeMap

COMMA
24,41
,

ID_UPPER
24,43
Set

RPAREN
24,46
)

LBRACK
24,59
[

ATTR_KEY
24,60
function

COMMA
24,68
,

ATTR_KEY
24,70
hook

LPAREN
24,74
(

ATTR_CONTENT
24,75
RANGEMAP.removeAll

RPAREN
24,93
)

RBRACK
24,94
]

KW_SYNTAX
25,3
syntax

ID_UPPER
25,10
Set

DCOLONEQ
25,14
::=

ID_LOWER
25,18
keys

LPAREN
25,22
(

ID_UPPER
25,23
RangeMap

RPAREN
25,31
)

LBRACK
25,54
[

ATTR_KEY
25,55
function

COMMA
25,63
,

ATTR_KEY
25,65
total

COMMA
25,70
,

ATTR_KEY
25,72
hook

LPAREN
25,76
(

ATTR_CONTENT
25,77
RANGEMAP.keys

RPAREN
25,90
)

RBRACK
25,91
]

KW_SYNTAX
26,3
syntax

ID_UPPER
26,10
List

DCOLONEQ
26,15
::=

STRING
26,19
"keys_list"

STRING
26,31
"("

ID_UPPER
26,35
RangeMap

STRING
26,44
")"

LBRACK
26,54
[

ATTR_KEY
26,55
function

COMMA
26,63
,

ATTR_KEY
26,65
hook

LPAREN
26,69
(

ATTR_CONTENT
26,70
RANGEMAP.keys_list

RPAREN
26,88
)

RBRACK
26,89
]

KW_SYNTAX
27,3
syntax

ID_UPPER
27,10
Bool

DCOLONEQ
27,15
::=

ID_UPPER
27,19
KItem

STRING
27,25
"in_keys"

STRING
27,35
"("

ID_UPPER
27,39
RangeMap

STRING
27,48
")"

LBRACK
27,58
[

ATTR_KEY
27,59
function

COMMA
27,67
,

ATTR_KEY
27,69
total

COMMA
27,74
,

ATTR_KEY
27,76
hook

LPAREN
27,80
(

ATTR_CONTENT
27,81
RANGEMAP.in_keys

RPAREN
27,97
)

RBRACK
27,98
]

KW_SYNTAX
28,3
syntax

ID_UPPER
28,10
List

DCOLONEQ
28,15
::=

ID_LOWER
28,19
values

LPAREN
28,25
(

ID_UPPER
28,26
RangeMap

RPAREN
28,34
)

LBRACK
28,54
[

ATTR_KEY
28,55
function

COMMA
28,63
,

ATTR_KEY
28,65
hook

LPAREN
28,69
(

ATTR_CONTENT
28,70
RANGEMAP.values

RPAREN
28,85
)

RBRACK
28,86
]

KW_SYNTAX
29,3
syntax

ID_UPPER
29,10
Int

DCOLONEQ
29,14
::=

ID_LOWER
29,18
size

LPAREN
29,22
(

ID_UPPER
29,23
RangeMap

RPAREN
29,31
)

LBRACK
29,54
[

ATTR_KEY
29,55
function

COMMA
29,63
,

ATTR_KEY
29,65
total

COMMA
29,70
,

ATTR_KEY
29,72
hook

LPAREN
29,76
(

ATTR_CONTENT
29,77
RANGEMAP.size

RPAREN
29,90
)

COMMA
29,91
,

ATTR_KEY
29,93
klabel

LPAREN
29,99
(

ATTR_CONTENT
29,100
sizeRangeMap

RPAREN
29,112
)

RBRACK
29,113
]

KW_SYNTAX
30,3
syntax

ID_UPPER
30,10
Bool

DCOLONEQ
30,15
::=

ID_UPPER
30,19
RangeMap

STRING
30,28
"<=RangeMap"

ID_UPPER
30,41
RangeMap

LBRACK
30,64
[

ATTR_KEY
30,65
function

COMMA
30,73
,

ATTR_KEY
30,75
total

COMMA
30,80
,

ATTR_KEY
30,82
hook

LPAREN
30,86
(

ATTR_CONTENT
30,87
RANGEMAP.inclusion

RPAREN
30,105
)

RBRACK
30,106
]

KW_SYNTAX
31,3
syntax

ID_UPPER
31,10
KItem

DCOLONEQ
31,16
::=

ID_LOWER
31,20
choice

LPAREN
31,26
(

ID_UPPER
31,27
RangeMap

RPAREN
31,35
)

LBRACK
31,58
[

ATTR_KEY
31,59
function

COMMA
31,67
,

ATTR_KEY
31,69
hook

LPAREN
31,73
(

ATTR_CONTENT
31,74
RANGEMAP.choice

RPAREN
31,89
)

COMMA
31,90
,

ATTR_KEY
31,92
klabel

LPAREN
31,98
(

ATTR_CONTENT
31,99
RangeMap:choice

RPAREN
31,114
)

RBRACK
31,115
]

KW_ENDMODULE
32,1
endmodule

EOF
32,9

